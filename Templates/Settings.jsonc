{
    "AppSettings": {
        "Debug": false,                                                 // Enables extra debug logging, slows down the program by alot
        "SilentMode": true                                              // The tool will stop and prompt you to continue on every remapping if disable   
    },
    "Remapper": {
        "AssemblyPath": "./Data/Managed/Assembly-CSharp.dll",           // Path to the assembly we want to remap
        "OutputPath": "./Data/Assembly-CSharp-Remapped.dll",            // Path including the filename and extension we want to write the changes to
        "MappingPath": "./Data/Mappings.jsonc",                         // Path to the mapping file     
        "MappingSettings": {
            "RenameFields": true,                                       // Names of fields of the matched type will be renamed to the type name with approproiate convention
            "RenameProperties": true,                                   // Names of properties of the matched type will be renamed to the type name with approproiate convention
            "Publicize": true,                                          // Publicize all types, methods, and properties : NOTE: Not run until after the remap has completed
            "Unseal": true                                              // Unseal all types : NOTE: Not run until after the remap has completed
        }
    },
    "AutoMapper": {
        "AssemblyPath": "./Data/Managed/Assembly-CSharp.dll",           // Path to the assembly we want to remap
        "OutputPath": "./Data/Assembly-CSharp-Remapped.dll",            // Path including the filename and extension we want to write the changes to
        "RequiredMatches": 5,                                           // Minimum number of times a member must have this name in the assembly before considering it for remapping
        "MinLengthToMatch": 7,                                          // Minimum length of the field/property name in code before it will be considered for a rename
        "SearchMethods": true,                                          // Will attempt to map types from method meta data and parameters
        "MappingSettings": {
            "RenameFields": true,                                       // Names of fields of the matched type will be renamed to the type name with approproiate convention
            "RenameProperties": true,                                   // Names of properties of the matched type will be renamed to the type name with approproiate convention
            "Publicize": true,                                          // Publicize all types, methods, and properties : NOTE: Not run until after the remap has completed
            "Unseal": true                                              // Unseal all types : NOTE: Not run until after the remap has completed
        },
        "TypesToIgnore": [                                              // Any member name you want to ignore while iterating through the assembly
            "Boolean",
            "List",
            "Dictionary",
            "Byte",
            "Int16",
            "Int32",
            "Func",
            "Action",
            "Object",
            "String",
            "Vector2",
            "Vector3",
            "Vector4",
            "Stream",
            "HashSet",
            "Double",
            "IEnumerator"
        ],
        "TokensToMatch": [                                              // The auto mapper will look for these tokens in class names and prioritize those
            "Class",
            "GClass",
            "GStruct",
            "GInterface"
        ],
        "PropertyFieldBlackList": [                                     // Property or fields names to ignore in the automap, these are case sanitized so case does not matter
            "Columns",
            "mColumns",
            "Template",
            "Condition",
            "Conditions",
            "Counter",
            "Instance",
            "Command",
            "_template"
        ],
        "MethodParamaterBlackList": [                                   // method parameter names to ignore in the automap, these are case sanitized so case does not matter
        ]
    },
    "CrossPatching": {
        "OriginalAssemblyPath": "G:\\3.8.0 - Dev\\EscapeFromTarkov_Data\\Managed\\Assembly-CSharp.dll",                                // INPUT:               The path to the original assembly to use as a reference, for unity games its 'Assembly-CSharp.dll' from the games Data/Managed Folder
        "RemappedOutput": "G:\\development\\SPT-MODS\\StashSearch\\dependencies\\Assembly-CSharp.dll",                                 // OUTPUT:              The output path of the remapped assembly
        "ReversePatchInputPath": "G:\\development\\SPT-MODS\\StashSearch\\StashSearch\\bin\\Debug\\net472\\StashSearch.dll",           // INPUT:               The input path of the assembly referenced by the remapped dll
        "ReversePatchOutputPath": "G:\\3.8.0 - Dev\\BepInEx\\Plugins\\StashSearch\\StashSearch.dll"                                    // OUTPUT/TEST/PROD:    Where should the de-patched dll be placed? (This is the one you test/distribute with)
    }
}
